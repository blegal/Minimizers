#include "file_raw_reader.hpp"
#include "../../tools/colors.hpp"
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
file_raw_reader::file_raw_reader(const std::string& filen)
{
    //
    // Ouverture du fichier en mode lecture !
    //
    stream = fopen( filen.c_str(), "r" );
    if( stream == NULL )
    {
        printf("(EE) File does not exist (%s))\n", filen.c_str());
        printf("(EE) Error location : %s %d\n", __FILE__, __LINE__);
        exit( EXIT_FAILURE );
    }
    is_open     = true; // file
    is_oef      = false;
}
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
file_raw_reader::~file_raw_reader()
{
    if( is_open )
        fclose( stream );
}
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
bool file_raw_reader::isOpen ()
{
    return is_open;
}
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
bool file_raw_reader::isClose()
{
    return (!is_open);
}
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
bool file_raw_reader::is_eof()
{
    return is_oef;
}
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//
int  file_raw_reader::read(char* buffer, int eSize, int eCount)
{
    const int nread = fread(buffer, eSize, eCount, stream);
    is_oef    = ( nread != eCount); // a t'on atteint la fin du fichier ?
    return nread; // nombre d'éléments de taille eSize
}
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//